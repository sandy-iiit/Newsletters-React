{"ast":null,"code":"var _jsxFileName = \"/Users/dattasandeepchoragudi/html/React/Authentication/frontend/src/pages/Authentication.js\";\nimport AuthForm from '../components/AuthForm';\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport async function action(_ref) {\n  let {\n    request\n  } = _ref;\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' || mode !== 'signup') {\n    throw json({\n      message: 'Unsupported Mode'\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    header: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could not authenticate the user'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/');\n}\nexport default AuthenticationPage;\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["AuthForm","json","redirect","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","header","body","JSON","stringify","ok","$RefreshReg$"],"sources":["/Users/dattasandeepchoragudi/html/React/Authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import AuthForm from '../components/AuthForm';\nimport {json, redirect} from \"react-router-dom\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport async function action({request}){\n  const searchParams = new URL(request.url).searchParams\n  const mode=searchParams.get('mode') || 'login'\n\n  if(mode!=='login'||mode!=='signup'){\n    throw json({message:'Unsupported Mode'},{status:422})\n  }\n\n  const data=await request.formData()\n  const authData={\n    email:data.get('email'),\n    password:data.get('password')\n  }\n\n  const response=await fetch(\"http://localhost:8080/\"+mode,{\n    method:\"POST\",\n    header:{\n      'Content-Type':'application/json'\n    },\n    body:JSON.stringify(authData)\n  })\n\n  if(response.status===422||response.status===401){\n    return response;\n  }\n\n  if(!response.ok){\n    throw  json({message:'Could not authenticate the user'},{status:500})\n  }\n  return redirect('/');\n}\n\nexport default AuthenticationPage;\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,wBAAwB;AAC7C,SAAQC,IAAI,EAAEC,QAAQ,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACJ,QAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAW;EAAA,IAAV;IAACC;EAAO,CAAC,GAAAD,IAAA;EACpC,MAAME,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAACH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAE9C,IAAGD,IAAI,KAAG,OAAO,IAAEA,IAAI,KAAG,QAAQ,EAAC;IACjC,MAAMhB,IAAI,CAAC;MAACkB,OAAO,EAAC;IAAkB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvD;EAEA,MAAMC,IAAI,GAAC,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACnC,MAAMC,QAAQ,GAAC;IACbC,KAAK,EAACH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACvBO,QAAQ,EAACJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC9B,CAAC;EAED,MAAMQ,QAAQ,GAAC,MAAMC,KAAK,CAAC,wBAAwB,GAACV,IAAI,EAAC;IACvDW,MAAM,EAAC,MAAM;IACbC,MAAM,EAAC;MACL,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC9B,CAAC,CAAC;EAEF,IAAGG,QAAQ,CAACN,MAAM,KAAG,GAAG,IAAEM,QAAQ,CAACN,MAAM,KAAG,GAAG,EAAC;IAC9C,OAAOM,QAAQ;EACjB;EAEA,IAAG,CAACA,QAAQ,CAACO,EAAE,EAAC;IACd,MAAOhC,IAAI,CAAC;MAACkB,OAAO,EAAC;IAAiC,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACvE;EACA,OAAOlB,QAAQ,CAAC,GAAG,CAAC;AACtB;AAEA,eAAeG,kBAAkB;AAAC,IAAAK,EAAA;AAAAwB,YAAA,CAAAxB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}